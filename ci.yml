name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: villgro_test
          POSTGRES_USER: villgro
          POSTGRES_PASSWORD: villgro
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U villgro -d villgro_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      # Django settings
      DJANGO_SETTINGS_MODULE: config.settings
      SECRET_KEY: dummy-secret
      DEBUG: "1"
      # DB envs expected by project
      DB_NAME: villgro_test
      DB_USER: villgro
      DB_PASSWORD: villgro
      DB_HOST: postgres
      DB_PORT: "5432"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && break
            echo "Waiting for postgres... ($i)"
            sleep 1
          done

      - name: Django checks & migrations (sanity)
        run: |
          python manage.py check
          python manage.py migrate --noinput

      - name: Run tests
        run: |
          pytest -q --cov=. --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-xml
          path: coverage.xml
